{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst sampleQuestions = [{\n  id: 'gravity-1',\n  question: 'What makes things fall down to Earth?',\n  options: ['Magic', 'Gravity', 'Wind', 'Magnets'],\n  correctAnswer: 1,\n  explanation: 'Gravity is the force that pulls objects toward Earth!'\n}, {\n  id: 'gravity-2',\n  question: 'What would happen if you dropped a ball on the Moon?',\n  options: ['It would float away', 'It would fall slower than on Earth', 'It would fall faster', 'Nothing would happen'],\n  correctAnswer: 1,\n  explanation: 'The Moon has less gravity than Earth, so things fall slower!'\n}];\nconst initialState = {\n  currentQuiz: null,\n  questions: sampleQuestions,\n  currentQuestionIndex: 0,\n  answers: {},\n  score: 0,\n  totalQuestions: sampleQuestions.length,\n  isCompleted: false,\n  showResults: false\n};\nconst quizSlice = createSlice({\n  name: 'quiz',\n  initialState,\n  reducers: {\n    startQuiz: (state, action) => {\n      state.currentQuiz = action.payload;\n      state.currentQuestionIndex = 0;\n      state.answers = {};\n      state.score = 0;\n      state.isCompleted = false;\n      state.showResults = false;\n    },\n    answerQuestion: (state, action) => {\n      state.answers[action.payload.questionId] = action.payload.answer;\n      const question = state.questions.find(q => q.id === action.payload.questionId);\n      if (question && action.payload.answer === question.correctAnswer) {\n        state.score += 1;\n      }\n    },\n    nextQuestion: state => {\n      if (state.currentQuestionIndex < state.questions.length - 1) {\n        state.currentQuestionIndex += 1;\n      } else {\n        state.isCompleted = true;\n        state.showResults = true;\n      }\n    },\n    resetQuiz: state => {\n      state.currentQuestionIndex = 0;\n      state.answers = {};\n      state.score = 0;\n      state.isCompleted = false;\n      state.showResults = false;\n    }\n  }\n});\nexport const {\n  startQuiz,\n  answerQuestion,\n  nextQuestion,\n  resetQuiz\n} = quizSlice.actions;\nexport default quizSlice.reducer;","map":{"version":3,"names":["createSlice","sampleQuestions","id","question","options","correctAnswer","explanation","initialState","currentQuiz","questions","currentQuestionIndex","answers","score","totalQuestions","length","isCompleted","showResults","quizSlice","name","reducers","startQuiz","state","action","payload","answerQuestion","questionId","answer","find","q","nextQuestion","resetQuiz","actions","reducer"],"sources":["/Users/bilal/Documents/GitHub/scifly/src/features/quiz/quizSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface QuizQuestion {\n  id: string\n  question: string\n  options: string[]\n  correctAnswer: number\n  explanation: string\n}\n\ninterface QuizState {\n  currentQuiz: string | null\n  questions: QuizQuestion[]\n  currentQuestionIndex: number\n  answers: { [questionId: string]: number }\n  score: number\n  totalQuestions: number\n  isCompleted: boolean\n  showResults: boolean\n}\n\nconst sampleQuestions: QuizQuestion[] = [\n  {\n    id: 'gravity-1',\n    question: 'What makes things fall down to Earth?',\n    options: ['Magic', 'Gravity', 'Wind', 'Magnets'],\n    correctAnswer: 1,\n    explanation: 'Gravity is the force that pulls objects toward Earth!'\n  },\n  {\n    id: 'gravity-2',\n    question: 'What would happen if you dropped a ball on the Moon?',\n    options: ['It would float away', 'It would fall slower than on Earth', 'It would fall faster', 'Nothing would happen'],\n    correctAnswer: 1,\n    explanation: 'The Moon has less gravity than Earth, so things fall slower!'\n  }\n]\n\nconst initialState: QuizState = {\n  currentQuiz: null,\n  questions: sampleQuestions,\n  currentQuestionIndex: 0,\n  answers: {},\n  score: 0,\n  totalQuestions: sampleQuestions.length,\n  isCompleted: false,\n  showResults: false,\n}\n\nconst quizSlice = createSlice({\n  name: 'quiz',\n  initialState,\n  reducers: {\n    startQuiz: (state, action: PayloadAction<string>) => {\n      state.currentQuiz = action.payload\n      state.currentQuestionIndex = 0\n      state.answers = {}\n      state.score = 0\n      state.isCompleted = false\n      state.showResults = false\n    },\n    answerQuestion: (state, action: PayloadAction<{ questionId: string; answer: number }>) => {\n      state.answers[action.payload.questionId] = action.payload.answer\n      \n      const question = state.questions.find(q => q.id === action.payload.questionId)\n      if (question && action.payload.answer === question.correctAnswer) {\n        state.score += 1\n      }\n    },\n    nextQuestion: (state) => {\n      if (state.currentQuestionIndex < state.questions.length - 1) {\n        state.currentQuestionIndex += 1\n      } else {\n        state.isCompleted = true\n        state.showResults = true\n      }\n    },\n    resetQuiz: (state) => {\n      state.currentQuestionIndex = 0\n      state.answers = {}\n      state.score = 0\n      state.isCompleted = false\n      state.showResults = false\n    },\n  },\n})\n\nexport const { startQuiz, answerQuestion, nextQuestion, resetQuiz } = quizSlice.actions\nexport default quizSlice.reducer "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAqB7D,MAAMC,eAA+B,GAAG,CACtC;EACEC,EAAE,EAAE,WAAW;EACfC,QAAQ,EAAE,uCAAuC;EACjDC,OAAO,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,CAAC;EAChDC,aAAa,EAAE,CAAC;EAChBC,WAAW,EAAE;AACf,CAAC,EACD;EACEJ,EAAE,EAAE,WAAW;EACfC,QAAQ,EAAE,sDAAsD;EAChEC,OAAO,EAAE,CAAC,qBAAqB,EAAE,oCAAoC,EAAE,sBAAsB,EAAE,sBAAsB,CAAC;EACtHC,aAAa,EAAE,CAAC;EAChBC,WAAW,EAAE;AACf,CAAC,CACF;AAED,MAAMC,YAAuB,GAAG;EAC9BC,WAAW,EAAE,IAAI;EACjBC,SAAS,EAAER,eAAe;EAC1BS,oBAAoB,EAAE,CAAC;EACvBC,OAAO,EAAE,CAAC,CAAC;EACXC,KAAK,EAAE,CAAC;EACRC,cAAc,EAAEZ,eAAe,CAACa,MAAM;EACtCC,WAAW,EAAE,KAAK;EAClBC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC5BkB,IAAI,EAAE,MAAM;EACZX,YAAY;EACZY,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACnDD,KAAK,CAACb,WAAW,GAAGc,MAAM,CAACC,OAAO;MAClCF,KAAK,CAACX,oBAAoB,GAAG,CAAC;MAC9BW,KAAK,CAACV,OAAO,GAAG,CAAC,CAAC;MAClBU,KAAK,CAACT,KAAK,GAAG,CAAC;MACfS,KAAK,CAACN,WAAW,GAAG,KAAK;MACzBM,KAAK,CAACL,WAAW,GAAG,KAAK;IAC3B,CAAC;IACDQ,cAAc,EAAEA,CAACH,KAAK,EAAEC,MAA6D,KAAK;MACxFD,KAAK,CAACV,OAAO,CAACW,MAAM,CAACC,OAAO,CAACE,UAAU,CAAC,GAAGH,MAAM,CAACC,OAAO,CAACG,MAAM;MAEhE,MAAMvB,QAAQ,GAAGkB,KAAK,CAACZ,SAAS,CAACkB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC1B,EAAE,KAAKoB,MAAM,CAACC,OAAO,CAACE,UAAU,CAAC;MAC9E,IAAItB,QAAQ,IAAImB,MAAM,CAACC,OAAO,CAACG,MAAM,KAAKvB,QAAQ,CAACE,aAAa,EAAE;QAChEgB,KAAK,CAACT,KAAK,IAAI,CAAC;MAClB;IACF,CAAC;IACDiB,YAAY,EAAGR,KAAK,IAAK;MACvB,IAAIA,KAAK,CAACX,oBAAoB,GAAGW,KAAK,CAACZ,SAAS,CAACK,MAAM,GAAG,CAAC,EAAE;QAC3DO,KAAK,CAACX,oBAAoB,IAAI,CAAC;MACjC,CAAC,MAAM;QACLW,KAAK,CAACN,WAAW,GAAG,IAAI;QACxBM,KAAK,CAACL,WAAW,GAAG,IAAI;MAC1B;IACF,CAAC;IACDc,SAAS,EAAGT,KAAK,IAAK;MACpBA,KAAK,CAACX,oBAAoB,GAAG,CAAC;MAC9BW,KAAK,CAACV,OAAO,GAAG,CAAC,CAAC;MAClBU,KAAK,CAACT,KAAK,GAAG,CAAC;MACfS,KAAK,CAACN,WAAW,GAAG,KAAK;MACzBM,KAAK,CAACL,WAAW,GAAG,KAAK;IAC3B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,SAAS;EAAEI,cAAc;EAAEK,YAAY;EAAEC;AAAU,CAAC,GAAGb,SAAS,CAACc,OAAO;AACvF,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}